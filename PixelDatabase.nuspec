<?xml version="1.0"?>
<package >
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <authors>Data Juggler - datajuggler.com</authors>
    <owners>Data Juggler</owners>
    <license type="expression">MIT</license>
    <projectUrl>https://github.com/DataJuggler/PixelDatabase.Net</projectUrl>
    <iconUrl>https://github.com/DataJuggler/PixelDatabase/blob/master/Eraser.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Pixel Database converts a Bitmap to a PixelInfomration object, that lets use LINQ or BQL (Bitmap Query Language)</description>
    <releaseNotes>
    1.0.4 - I made a few changes under the hood, and a new feature where you can draw a line in color now by adding an optional color after the line thickness.

    Draw Line 1 Red

    I also added a status callback, so I can get a little feedback while the Draw Line is operating. For the draw line in color, it is exrtemely fast compared to the draw
    transparent line has to find the pixels updated, and it is very slow. With the delegate I saw why, one query I ran had 600,000 pixels to udpate, and it completed
    about 1,000 every 20 seconds. One day I want to learn how to utilize a GPU to speed this up since I own a 1080 TI; not the fastest now, but is still faster
    than most GPU's.
    
    1.0.0 - First .Net Framework version, because .Net Standard 2.1 doesn't work with .Net Framework.</releaseNotes>
    <copyright>Copyright 2020</copyright>
    <tags>C#,Bitmap,Pixels,Jpegs,Pngs,Images,Imaging,Image Editing</tags>
    <dependencies>
      <dependency id="DataJuggler.Core.UltimateHelper" version="1.5" include="contentFiles, build" />
    </dependencies>
  </metadata>
</package>